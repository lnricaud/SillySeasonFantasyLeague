continue
players.class
players
players = players.values
players.class
players
continue
player = players[sell_id]
sell_id = sell_id.to_i
player = players[sell_id]
sell_id
player = players[163]
player = 
players[163]
players[1]
player['1']
player[1]
players
player
exit
logmessage
user.id
bid
continue
exit
$playerdata[2].web_name
$playerdata[2]
$playerdata['2']
$playerdata['2'][:web_name]
$playerdata[2][:web_name]
player.value
player
player['id']
player[id]
player.id
player
player.id
$playerdata[player.id]
$playerdata
Log.where(action: "newgamewee").last.game_week
Log.where(action: "newgameweek").last.game_week
Log.where(action: "newgameweek").last
Log.where(action: "newgameweek")
Log.find_by(action: "newgameweek").first
Log.find_by(action: "newgameweek")
Log.find_by(action: "newgameweek").last
Log.find_by action: "newgameweek"
Log.create(action: 'newgameweek', game_week: 1)
Log.all
$leagueplayers[league.id][sentPlayer["id"]]
player
player.value = 4500000
player.value
player
$leagueplayers[league.id][sentPlayer["id"]]
$leagueplayers[league.id][sentPlayer["id"]].topbid
$leagueplayers[league.id][sentPlayer["id"]].topbid = 5000000
$leagueplayers[league.id][sentPlayer["id"]].topbid
$leagueplayers[league.id][sentPlayer["id"]]
player
player.value
player[:value] == sentPlayer[:value] && player[:user_id] == sentPlayer[:user_id] && player[:owned] == sentPlayer[:owned]
s
$leagueplayers[league.id][sentPlayer["id"]]
$leagueplayers[league.id]
sentPlayer["id"]
sentPlayer.id
sentPlayer
league.id
leauge.id
league
$leagueplayers
c
s 30
s30
s 30
s30
s
ss
s
s 30
c 95
s
s 10
s
sentPlayer
exit
n
s
player
s
step
$leagueplayers
continue
$playerdata.keys
$playerdata
continue
step
players
step
continue
players
continue
players.length
players.lenght
players
continue
league_players[1][1].data
league_players[1][1]
league_players[1]
league_players
continue
league_players
$playerdata
â‚¬playerdata
continue
league
players["1"]
players[1]
players.1
players.class
players.first
players.fist
players
continue
players.first["playerdata_id"].salary
players.first["playerdata_id"].class
players.first["playerdata_id"]
players.first.playerdata_id
players.first
players
continue
$playerdata["699"].class
$playerdata["699"]
$playerdata.keys
$playerdata
$playerdata.class
$playerdata.first
$playerdata
exit
$playerdata.first.class
$playerdata.first.length
$playerdata.first
$playerdata
players.length
players.class
player.count
players
exit
Playerdata.new({\"id\"=>700, \"web_name\"=>\"Leko\", \"event_explain\"=>[[\"Minutes played\", 0, 0], [\"Minutes played\", 0, 0]], \"fixture_history\"=>{\"all\"=>[[\"02 Apr 15:00\", 32, \"SUN(A) 0-0\", 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 45, 1], [\"09 Apr 17:30\", 33, \"MCI(A) 1-2\", 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 45, 1], [\"16 Apr 15:00\", 34, \"WAT(H) 0-1\", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 45, 0], [\"21 Apr 19:45\", 34, \"ARS(A) \", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 45, 0]], \"summary\"=>[[33, \"MCI (A)\", 1], [34, \"WAT (H)\", 0], [34, \"ARS (A)\", 0]]}, \"season_history\"=>[], \"fixtures\"=>{\"all\"=>[[\"21 Apr 19:45\", \"Gameweek 34\", \"Arsenal (A)\"], [\"25 Apr 20:00\", \"Gameweek 35\", \"Spurs (A)\"], [\"30 Apr 15:00\", \"Gameweek 36\", \"West Ham (H)\"], [\"07 May 15:00\", \"Gameweek 37\", \"Bournemouth (A)\"], [\"15 May 15:00\", \"Gameweek 38\", \"Liverpool (H)\"]], \"summary\"=>[[34, \"ARS (A)\", \"21 Apr 19:45\"], [35, \"TOT (A)\", \"25 Apr 20:00\"], [36, \"WHU (H)\", \"30 Apr 15:00\"]]}, \"event_total\"=>0, \"type_name\"=>\"Forward\", \"team_name\"=>\"West Brom\", \"total_points\"=>2, \"current_fixture\"=>\"Watford (H), Arsenal (A)\", \"next_fixture\"=>\"Spurs (A)\", \"news\"=>\"\", \"team_id\"=>19, \"first_name\"=>\"Jonathan\", \"second_name\"=>\"Leko\", \"chance_of_playing_this_round\"=>nil, \"chance_of_playing_next_round\"=>nil, \"points_per_game\"=>\"1.0\", \"minutes\"=>24, \"goals_scored\"=>0, \"assists\"=>0, \"clean_sheets\"=>0, \"goals_conceded\"=>0, \"own_goals\"=>0, \"penalties_saved\"=>0, \"penalties_missed\"=>0, \"yellow_cards\"=>0, \"red_cards\"=>0, \"saves\"=>0, \"bonus\"=>0}exit)
Playerdata.new({\"id\"=>700, \"web_name\"=>\"Leko\", \"event_explain\"=>[[\"Minutes played\", 0, 0], [\"Minutes played\", 0, 0]], \"fixture_history\"=>{\"all\"=>[[\"02 Apr 15:00\", 32, \"SUN(A) 0-0\", 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 45, 1], [\"09 Apr 17:30\", 33, \"MCI(A) 1-2\", 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 45, 1], [\"16 Apr 15:00\", 34, \"WAT(H) 0-1\", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 45, 0], [\"21 Apr 19:45\", 34, \"ARS(A) \", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 45, 0]], \"summary\"=>[[33, \"MCI (A)\", 1], [34, \"WAT (H)\", 0], [34, \"ARS (A)\", 0]]}, \"season_history\"=>[], \"fixtures\"=>{\"all\"=>[[\"21 Apr 19:45\", \"Gameweek 34\", \"Arsenal (A)\"], [\"25 Apr 20:00\", \"Gameweek 35\", \"Spurs (A)\"], [\"30 Apr 15:00\", \"Gameweek 36\", \"West Ham (H)\"], [\"07 May 15:00\", \"Gameweek 37\", \"Bournemouth (A)\"], [\"15 May 15:00\", \"Gameweek 38\", \"Liverpool (H)\"]], \"summary\"=>[[34, \"ARS (A)\", \"21 Apr 19:45\"], [35, \"TOT (A)\", \"25 Apr 20:00\"], [36, \"WHU (H)\", \"30 Apr 15:00\"]]}, \"event_total\"=>0, \"type_name\"=>\"Forward\", \"team_name\"=>\"West Brom\", \"total_points\"=>2, \"current_fixture\"=>\"Watford (H), Arsenal (A)\", \"next_fixture\"=>\"Spurs (A)\", \"news\"=>\"\", \"team_id\"=>19, \"first_name\"=>\"Jonathan\", \"second_name\"=>\"Leko\", \"chance_of_playing_this_round\"=>nil, \"chance_of_playing_next_round\"=>nil, \"points_per_game\"=>\"1.0\", \"minutes\"=>24, \"goals_scored\"=>0, \"assists\"=>0, \"clean_sheets\"=>0, \"goals_conceded\"=>0, \"own_goals\"=>0, \"penalties_saved\"=>0, \"penalties_missed\"=>0, \"yellow_cards\"=>0, \"red_cards\"=>0, \"saves\"=>0, \"bonus\"=>0})
exit
newpl
exit
newpl
exit
newpl
exit
p player_data
player_data
exit
Playerdata.new(player_data.keep_if {|key, value| player_params.include?(key)})
$playerdata
league_players
league_player
p i
s
n
next
s
key
s
key
s
n
next
s
next
s
step
next
step
p i
i
player_data.keep_if {|key, value| player_params.include?(key)}
league_players
league
user
exit
continue
exit
$playerdata
step
$playerdata
step
league_players
exit
league_players
continue
player_data
exit
pl = Playerdata.new(player_data)
Playerdata.new(player_data)
newplayer
player_data["web_name"]
player_data["id"]
player_data
leagues
leagues.nil?
league_players[1]
league_players.1
league_players
league_players.empty?
$playerdata[i].nil?
$playerdata
